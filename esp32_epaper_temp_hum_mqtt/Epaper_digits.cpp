#include <algorithm>
#include <iostream>
#include "GUI_Paint.h"
#include "EPD.h"
#include "Epaper_digits.h"

using namespace std;

const int digits_font_width = 53;
const int digits_font_high = 88;
const int digits_dot_width = 10;
const int digits_celc_width = 20;
const int digits_perc_width = 20;

const unsigned char gImage_0[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_1[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_2[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X00,
0X00,0X01,0X00,0XFF,0XFF,0XFF,0X81,0XFF,0XFE,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,
0XFF,0X80,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_3[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X81,0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_4[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_5[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XFF,
0XFF,0XFF,0X00,0X80,0X00,0X00,0X81,0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_6[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0XFF,0XFF,0XFF,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_7[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_8[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_9[583] = { /* 0X41,0X01,0X35,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XFF,
0XFF,0XFF,0X00,0X80,0X00,0X00,0X81,0XFF,0XFE,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,
0X00,0X80,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0X80,0X00,0X00,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,
0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,
0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,
0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,
0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,
0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,
0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,
0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,
0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,
0X7F,0XFC,0X03,0XFF,0XFF,0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFC,0X03,0XFF,0XFF,
0XFF,0X00,0XFF,0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,
0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,
0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,
0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0X7F,0XFC,0X02,0X00,0X00,0X01,0X00,0X80,
0X00,0X00,0X80,0X7F,0XFE,0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X80,0XFF,0XFF,
0X02,0X00,0X00,0X01,0X00,0X80,0X00,0X00,0X81,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_dot[110] = { /* 0X41,0X01,0X0A,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X03,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X07,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};

const unsigned char gImage_celc[220] = { /* 0X41,0X01,0X14,0X00,0X58,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,
0XFF,0XFF,0X9F,0XCF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X8C,0X7F,0XFF,0X3F,0XE0,0X00,
0X03,0XFF,0XFF,0XFF,0XFF,0X9E,0X7F,0XFE,0X78,0X70,0X00,0X00,0XFF,0XFF,0XFF,0XFF,
0X9E,0X7F,0XFC,0X70,0X3F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0X8C,0X7F,0XFC,0XE0,0X1F,
0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0XC0,0XFF,0XFC,0XE0,0X00,0X01,0XFF,0X3F,0XFF,0XFF,
0XFF,0XE1,0XFF,0XFC,0XE0,0X00,0X01,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0XE0,
0X1F,0XFF,0XFE,0X3F,0XFF,0XFE,0X00,0X00,0XFF,0XFC,0X70,0X3F,0XFF,0XFC,0X7F,0XFF,
0XFC,0X00,0X00,0X7F,0XFE,0X78,0X70,0X00,0X00,0XFF,0XFF,0XFC,0X00,0X00,0X7F,0XFF,
0X3F,0XE0,0X00,0X03,0XFF,0XFF,0XFC,0X7F,0XFC,0X7F,0XFF,0X9F,0XCF,0XFF,0XFF,0XFF,
0XFF,0XFC,0X7F,0XFC,0X7F,0XFF,0XC0,0X1F,0XCF,0XF3,0XFF,0XFF,0XFC,0X7F,0XFC,0X7F,
0XFF,0XE0,0X3F,0XCE,0X73,0XFF,0XFF,0XFC,0X7F,0XFC,0X7F,0XFF,0XFF,0XFF,0XCE,0X73,
0XFF,0XFF,0XFC,0X7F,0XFC,0X7F,0XFF,0XFF,0XFF,0XCF,0XF3,0XFF,0XFF,0XFE,0X7F,0XFC,
0XFF,0XFF,0XFF,0XFF,0XCF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};


const unsigned char gImage_perc[220] = { /* 0X41,0X01,0X14,0X00,0X58,0X00, */
0XFF,0XFE,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XE3,0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XC0,
0XFF,0XFF,0XCF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0X8F,0X8C,0X7F,0XFF,0X9F,0XFE,0X1F,
0XFF,0XFF,0XFF,0XFF,0XC7,0X9E,0X7F,0XFF,0X3F,0XFE,0X0F,0XFF,0XFF,0XFF,0XFF,0XE3,
0X9E,0X7F,0XFF,0X3F,0XFC,0X03,0XFF,0XFF,0XFF,0XFF,0XF1,0X8C,0X7F,0XFF,0X7F,0XF0,
0X00,0XFF,0XFF,0XFF,0XFF,0XF8,0XC0,0XFF,0XFE,0X7F,0XE0,0X00,0X7F,0XFF,0XFF,0XFF,
0XFC,0X61,0XFF,0XFE,0X7F,0XC0,0X00,0X1F,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFE,0X7F,
0X80,0X00,0X3F,0XFF,0XFF,0XFF,0X87,0X1F,0XFF,0XFE,0X7F,0X00,0X00,0X7F,0XFF,0XFF,
0XFF,0X03,0X8F,0XFF,0XFF,0X7E,0X00,0X01,0XFF,0XFF,0XFF,0XFE,0X31,0XC7,0XFF,0XFF,
0X3C,0X00,0X03,0XFF,0XFF,0XFF,0XFE,0X79,0XE3,0XFF,0XFF,0X18,0X00,0X0F,0XFF,0XFF,
0XFF,0XFE,0X79,0XF1,0XFF,0XFF,0X90,0X00,0X1F,0XFF,0XFF,0XFF,0XFE,0X31,0XF8,0XFF,
0XFF,0XC0,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0X03,0XFC,0X7F,0XFF,0XE0,0X01,0XFF,0XFF,
0XFF,0XFF,0XFF,0X87,0XFE,0X7F,0XFF,0XF8,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,};


unsigned char gImage_digits[10][583];
UBYTE *Image;

void EpaperBigDigits::digits_init(void){

  int digit_num = 0;
  copy(begin(gImage_0), end(gImage_0) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_1), end(gImage_1) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_2), end(gImage_2) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_3), end(gImage_3) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_4), end(gImage_4) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_5), end(gImage_5) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_6), end(gImage_6) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_7), end(gImage_7) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_8), end(gImage_8) , begin(gImage_digits[digit_num++]));
  copy(begin(gImage_9), end(gImage_9) , begin(gImage_digits[digit_num++]));
  initEpaper();
  EPD_2in13_V4_Display_Base(Image);
}

void EpaperBigDigits::initEpaper() {
  printf("epaper init starting...\r\n");
  DEV_Module_Init();
  EPD_2in13_V4_Init();

  //Create a new image cache
  UWORD Imagesize = ((EPD_2in13_V4_WIDTH % 8 == 0) ? (EPD_2in13_V4_WIDTH / 8) : (EPD_2in13_V4_WIDTH / 8 + 1)) * EPD_2in13_V4_HEIGHT;
  if ((Image = (UBYTE *)malloc(Imagesize)) == NULL) {
    printf("Failed to apply for black memory...\r\n");
    while (1)
      ;
  }
  Paint_NewImage(Image, EPD_2in13_V4_WIDTH, EPD_2in13_V4_HEIGHT, 90, WHITE);
  Paint_Clear(WHITE);
  DEV_Delay_ms(2000);
}

void EpaperBigDigits::drawDigit(int digit, int *x, int y, int font_high, int font_width) {
  Paint_DrawImage(gImage_digits[digit], y, *x, font_high, font_width);
  *x = *x + font_width;
  return;
}

void EpaperBigDigits::drawSymbol(int *x, int y, int font_high, int font_width, const unsigned char gImage[]) {
  Paint_DrawImage(gImage, y, *x, font_high, font_width);
  *x = *x + font_width;
  return;
}

void EpaperBigDigits::drawDigits(int x, int y, int digits[], Display_type display_type) {
  for (int i = 0; i <= 1; i++) {
    drawDigit(digits[i], &x, y, digits_font_high, digits_font_width);
  }
  drawSymbol(&x, y, digits_font_high, digits_dot_width, gImage_dot);
  for (int i = 2; i <= 3; i++) {
    drawDigit(digits[i], &x, y, digits_font_high, digits_font_width);
  }
  if (display_type == TEMPERATURE) {
    drawSymbol(&x, y, digits_font_high, digits_celc_width, gImage_celc);
  } else {
    drawSymbol(&x, y, digits_font_high, digits_perc_width, gImage_perc);
  }
  EPD_2in13_V4_Display_Partial(Image);
}

void EpaperBigDigits::drawFloat(int x, int y, float value, Display_type display_type) {
  int digits[4];
  int position = 0;
  int rest = int(value * 100);
  for (int i = 0; i < 4; i++) {
    calc_digits(digits, &position, &rest);
  }
  drawDigits(x, y, digits, display_type);
}

void EpaperBigDigits::calc_digits(int digits[4], int *position, int *rest) {
  int multiplier = pow(10, 3 - *position);
  int digit_value = (int)(*rest / multiplier);
  digits[*position] = digit_value;
  *rest = *rest - digit_value * multiplier;
  *position = *position + 1;
  return;
}

void EpaperBigDigits::clear_display(){
    Paint_Clear(WHITE);
}
